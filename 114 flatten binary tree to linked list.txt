/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode* root) 
    {
        if(root==NULL)
            return ;
        if(root->left==NULL && root->right==NULL)
            return ;
        else if(root->left==NULL)
            flatten(root->right);
        else if(root->right==NULL)
        {
            TreeNode*temp=root->left;
            root->left=NULL;
            root->right=temp;
            flatten(root->right);
        }
        else{
            TreeNode*a=root->left;
            TreeNode*b=root->right;
            root->left=NULL;
            root->right=a;
            TreeNode*temp=root;
            while(temp->right!=NULL)
                temp=temp->right;
            temp->right=b;
            flatten(root->right);
        }
    }
};