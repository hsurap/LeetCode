class Solution {
public:
    // int func(string s1,string s2,int i,int j,vector<vector<int>>dp)
    // {
    //     if(i<0 || j<0)return 0;
    //     if(dp[i][j]!=-1)return dp[i][j];
    //     if(s1[i]==s2[j])return  dp[i][j]= 1+func(s1,s2,i-1,j-1,dp);
    //     else{
    //         int c1=func(s1,s2,i-1,j,dp);
    //         int c2=func(s1,s2,i,j-1,dp);
    //         return  dp[i][j]= max(c1,c2);
    //     }
    // }
    int longestCommonSubsequence(string s1, string s2) 
    {
        vector<vector<int>>dp(s1.size()+1,vector<int>(s2.size()+1,0));
        for(int i=1;i<=s1.size();i++)
        {
            for(int j=1;j<=s2.size();j++)
            {
                if(s1[i-1]==s2[j-1])
                    dp[i][j]=1+dp[i-1][j-1];
                else
                    dp[i][j]=max(dp[i][j-1],dp[i-1][j]);
            }
        }
        return dp[s1.size()][s2.size()];
    }
};