/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) 
    {
        if(root->left==NULL && root->right==NULL)
            return 1;
        int ms=root->val;
        int index=1;
        int mi=1;
        int cs=0;
        queue<TreeNode*>q;
        q.push(root);
        q.push(NULL);
        while(q.size()!=0)
        {
            TreeNode*front=q.front();
            q.pop();
            if(front!=NULL)
                cs+=front->val;
            if(front==NULL)
            {
                if(cs>ms)
                {
                    
                    ms=cs;
                    mi=index;
                }
                index++;
                cs=0;
                if(q.size()!=0)
                    q.push(NULL);
            }
            if(front!=NULL && front->left!=NULL)
                q.push(front->left);
            if(front!=NULL && front->right!=NULL)
                q.push(front->right);
        }
        return mi;
    }
};