/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int func(TreeNode*root,int & ans)
    {
        if(root==NULL)return 0;
        int la=func(root->left,ans);
        int ra=func(root->right,ans);
        ans=max(ans,root->val+max(0,la)+max(0,ra));
        return max({0,root->val+max(0,la),root->val+max(0,ra)});
    }
    int maxPathSum(TreeNode* root) {
        if(root==NULL)return 0;
        int ans=root->val;
        func(root,ans);
        return ans;
    }
};