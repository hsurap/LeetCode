/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> neighbors;
    Node() {
        val = 0;
        neighbors = vector<Node*>();
    }
    Node(int _val) {
        val = _val;
        neighbors = vector<Node*>();
    }
    Node(int _val, vector<Node*> _neighbors) {
        val = _val;
        neighbors = _neighbors;
    }
};
*/

class Solution {
public:
    unordered_map<Node*,Node*>map;
    Node* cloneGraph(Node* node) {
        if(node==NULL)return NULL;
        if(map.count(node))
            return map[node];
        Node*nn= new Node(node->val);
        map[node]=nn;
        for(auto i:node->neighbors)
        {
            nn->neighbors.push_back(cloneGraph(i));
        }
        return nn;
    }
};