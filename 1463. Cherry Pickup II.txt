class Solution {
public:
    int func(vector<vector<int>>& grid,int r,int c1,int c2,vector<vector<vector<int>>>&dp)
    {
        if(r==grid.size())return 0;
        if(c1<0 || c2<0 || c1>=grid[0].size() || c2>=grid[0].size())return 0;
        if(dp[r][c1][c2]!=-1)return dp[r][c1][c2];
        int ans=INT_MIN;
        int mov[3]={-1,0,+1};
        for(int i=0;i<3;i++)
        {
            for(int j=0;j<3;j++)
            {
                int ca=func(grid,r+1,c1+mov[i],c2+mov[j],dp);
                ans=max(ans,ca);
            }
        }
        if(c1==c2)
            return dp[r][c1][c2]= ans+grid[r][c1];
        else
            return dp[r][c1][c2]= ans+grid[r][c1]+grid[r][c2];
    
    }
    int cherryPickup(vector<vector<int>>& grid) {
        vector<vector<vector<int>>>dp(grid.size(),vector<vector<int>>(grid[0].size(),vector<int>(grid[0].size(),-1)));
        return func(grid,0,0,grid[0].size()-1,dp);
    }
};