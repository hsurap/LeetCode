/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    int legnth(ListNode*head)
    {
        ListNode*temp=head;
        int count=0;
        while(temp!=NULL)
        {
            count++;
            temp=temp->next;
        }
        return count;
    }
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int l1=legnth(headA);
        int l2=legnth(headB);
        int move;
        ListNode*ptr1;
        ListNode*ptr2;
        if(l1>=l2)
        {
            move=l1-l2;
            ptr1=headA;
            ptr2=headB;
        }
        else
        {
            move=l2-l1;
            ptr1=headB;
            ptr2=headA;
        }
        int i=0;
        while(ptr1!=NULL && i<move)
        {
            ptr1=ptr1->next;
            i++;
        }
        while(ptr1!=NULL && ptr2!=NULL)
        {
            if(ptr1==ptr2)
                return ptr1;
            ptr1=ptr1->next;
            ptr2=ptr2->next;
        }
        return NULL;
    }
};