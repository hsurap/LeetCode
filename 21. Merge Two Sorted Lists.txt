/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(l1==NULL)return l2;
        if(l2==NULL)return l1;
        ListNode*nhead;
        ListNode*ntail;
        if(l1->val<=l2->val)
        {
            nhead=l1;
            ntail=l1;
            l1=l1->next;
        }
        else{
            nhead=l2;
            ntail=l2;
            l2=l2->next;
        }
        while(l1!=NULL && l2!=NULL)
        {
            if(l1->val<=l2->val)
            {
                ntail->next=l1;
                ntail=l1;
                l1=l1->next;
            }
            else{
                ntail->next=l2;
                ntail=l2;
                l2=l2->next;
            }     
        }
        if(l1!=NULL)ntail->next=l1;
        if(l2!=NULL)ntail->next=l2;
        return nhead;
        
    }
};