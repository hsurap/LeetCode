/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int func(TreeNode* root, int k,int &ans)
    {
        if(root==NULL)return 0;
        int l=func(root->left,k,ans);
        if(k==l+1)
            ans=root->val;
        int r=func(root->right,k-l-1,ans);
        return l+r+1;
        
    }
    int kthSmallest(TreeNode* root, int k) 
    {
        int ans=-1;
        func(root,k,ans);
        return ans;
    }
};