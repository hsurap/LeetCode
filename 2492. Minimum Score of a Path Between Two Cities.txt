class Solution {
public:
    int minScore(int n, vector<vector<int>>& a) {
        unordered_map<int, vector<pair<int, int>>> map;
        for(int i=0; i<a.size(); i++) {
            map[a[i][0]].push_back(make_pair(a[i][1], a[i][2]));
            map[a[i][1]].push_back(make_pair(a[i][0], a[i][2]));
        }
        vector<int>dist(n+1,INT_MAX);
        //dist[1]=0;
        queue<int>q;
        q.push(1);
        while(q.size()!=0)
        {
            int t=q.front();
            q.pop();
            for( auto i:map[t])
            {
                int nod=i.first;
                int dis=i.second;
                int newdi=min(dist[t],dis);
                if(newdi<dist[nod])
                {
                    dist[nod]=newdi;
                    q.push(nod);
                }
            }
        }
        dist[1]=0;
        return dist[n];
    }
};