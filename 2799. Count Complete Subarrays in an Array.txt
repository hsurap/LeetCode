class Solution {
public:
    int func(vector<int>& a,int c)
    {
        unordered_map<int,int>map;
        int ans=0;
        int i=0,j=0;
        while(j<a.size())
        {
            map[a[j]]++;
            if(map.size()>c)
            {
                ans+=(j-i);
                while(map.size()>c)
                {
                    map[a[i]]--;
                    if(map[a[i]]==0){
                        map.erase(a[i]);
                    }
                    i++;
                    if(map.size()>c)
                        ans+=(j-i);
                }
            }
            j++;
        }
        int no=(j-i);
        ans+=(no*(no+1))/2;
        return ans;
    }
    
    int countCompleteSubarrays(vector<int>& a) 
    {
        set<int>st;
        for(auto i:a)
            st.insert(i);
        int cnt=st.size();
        int n=a.size();
        int no=(n*(n+1))/2;
        
        int ans=no-func(a,cnt-1);
        //cout<<" "<<no<<" "<<func(a,cnt-1);
        return ans;
    }
};