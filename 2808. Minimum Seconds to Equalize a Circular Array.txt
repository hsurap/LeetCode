class Solution {
public:
    int minimumSeconds(vector<int>& a) 
    {
        unordered_map<int,vector<int>>map;
        for(int i=0;i<a.size();i++)
        {
            map[a[i]].push_back(i);
        }
        int n=a.size();
        int ans=INT_MAX;
        for(auto i:map)
        {
            if(i.second.size()==1)
            {
                
                ans=min(ans,n/2);
            }
            else{
                int s=INT_MIN;
                //cout<<i.first<<" "<<i.second.size()<<endl;
                for(int j=0;j<i.second.size()-1;j++)
                {
                    //cout<<i.second[j]<<" ";
                    int d=i.second[j+1]-i.second[j];
                    s=max(s,(d/2));
                    
                }
                //cout<<endl;
                int d=n-1-i.second[i.second.size()-1]+i.second[0];
                //cout<<d<<endl;
                if(d%2==0)
                    s=max(s,(d/2));
                else
                    s=max(s,(d/2)+1);
                //cout<<s<<endl;
                ans=min(ans,s);
            }
            
        }
        return ans;
    }
};