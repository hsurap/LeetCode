class Solution {
public:
    bool func(string s,string p,int i,int j,vector<vector<int>>&dp)
    {
        if(i<0 && j<0)return true;
        if(j<0)return false;
        if(i<0)
        {
            for(int k=0;k<=j;k++)
            {
                if(p[k]!='*')return false;
            }
            return true;
        }
        if(dp[i][j]!=-1)return dp[i][j];
        if(s[i]==p[j] || p[j]=='?')
            return dp[i][j]=func(s,p,i-1,j-1,dp);
        else if(p[j]!='*')
            return false;
        else{
            return dp[i][j]=func(s,p,i-1,j,dp)||func(s,p,i,j-1,dp);
        }
    }
    bool isMatch(string s, string p) {
        vector<vector<bool>>dp(s.size()+1,vector<bool>(p.size()+1));
        int n=s.size();
        int m=p.size();
        dp[0][0]=true;
        for(int i=1;i<=n;i++)dp[i][0]=false;
        for(int j=1;j<=m;j++)
        {
            if(p[j-1]!='*')dp[0][j]=false;
            else dp[0][j]=dp[0][j-1];
        }
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(s[i-1]==p[j-1] || p[j-1]=='?')
                    dp[i][j]=dp[i-1][j-1];
                else if(p[j-1]!='*')
                    dp[i][j]=false;
                else{
                    dp[i][j]=dp[i-1][j]||dp[i][j-1];
                }
            }
        }
        return dp[n][m];
    }
};