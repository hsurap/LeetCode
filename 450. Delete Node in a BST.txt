/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int min_data(TreeNode* root)
    {
        if(root==NULL)
            return INT_MAX;
        if(root->left==NULL)
            return root->val;
        return min_data(root->left);
    }
    TreeNode* deleteNode(TreeNode* root, int key)
    {
        if(root==NULL)
            return root;
        if(root->val>key)
        {
            root->left=deleteNode(root->left,key);
            return root;
        }
        else if(root->val<key)
        {
            root->right=deleteNode(root->right,key);
            return root;
        }
        else{
            if(root->left==NULL && root->right==NULL)
            {
                delete root;
                return NULL;
            }
            else if(root->left==NULL)
            {
                TreeNode*temp=root->right;
                root->right=NULL;
                delete root;
                return temp;
            }
            else if(root->right==NULL)
            {
                TreeNode*temp=root->left;
                root->left=NULL;
                delete root;
                return temp;
            }
            else{
                int min=min_data(root->right);
                root->val=min;
                root->right=deleteNode(root->right, min);
                return root;
            }
        }
            
    }
};