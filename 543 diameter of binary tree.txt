/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    pair<int,int> help(TreeNode* root)
    {
        if(root==NULL)
        {
            pair<int,int>p;
            p.first=0;
            p.second=0;
            return p;
        }

        pair<int,int>leftans=help(root->left);
        pair<int,int>rightans=help(root->right);

        int mx_h=1+max(leftans.second,rightans.second);
        int mx_d=max(leftans.first,max(rightans.first,leftans.second+rightans.second));
        pair<int,int>ans;
        ans.first=mx_d;
        ans.second=mx_h;
        return ans;


    }
    int diameterOfBinaryTree(TreeNode* root) 
    {
        pair<int,int>ans=help(root);
        return ans.first;
    }
};