/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool func(TreeNode* root, int k,unordered_map<int,bool>&map)
    {
        if(root==NULL)return false;
        if(map.count(k-root->val))return true;
        map[root->val]=true;
        return func(root->left,k,map) || func(root->right,k,map);
    }
    bool findTarget(TreeNode* root, int k) 
    {
        unordered_map<int,bool>map;
        return func(root,k,map);
    }
};