class Solution {
public:
    int minFallingPathSum(vector<vector<int>>& a) 
    {
        int n=a.size(),m=a[0].size();
        vector<vector<int>>dp(n,vector<int>(m,0));
        for(int i=0;i<m;i++)
            dp[0][i]=a[0][i];
        int ans=INT_MAX;
        for(int i=1;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                int c1=INT_MAX,c2=INT_MAX,c3=INT_MAX;
                if(j>0)c1=dp[i-1][j-1];
                c2=dp[i-1][j];
                if(j<m-1)c3=dp[i-1][j+1];
                dp[i][j]=min({c1,c2,c3})+a[i][j];
            }
        }
        for(auto i:dp[n-1])
            ans=min(ans,i);
        return ans;

    }
};