/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    pair<bool,pair<long long,long long>>func(TreeNode* root)
    {
        if(root==NULL)return {true,{9223372036854775807,-1*9223372036854775808}};
        pair<bool,pair<long long,long long>>la=func(root->left);
        pair<bool,pair<long long,long long>>ra=func(root->right);
        
        long long lmin=la.second.first;
        long long rmin=ra.second.first;
        long long lmax=la.second.second;
        long long rmax=ra.second.second;
        long long rd=root->val;
        
        if(la.first && ra.first && root->val > lmax && root->val< rmin)
            return {true,{min(rd,min(lmin,rmin)),max(rd,max(lmax,rmax))}};
        else
            return {false,{min(rd,min(lmin,rmin)),max(rd,max(lmax,rmax))}};
    }
    
    bool isValidBST(TreeNode* root) {
        return func(root).first;
    }
};