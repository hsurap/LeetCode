class Solution {
public:
    bool canFinish(int n, vector<vector<int>>& a) 
    {
        // if(n==1)return true;
        if(a.size()==0)return true;
        unordered_map<int,vector<int>>adj;
        vector<int>vis(n,0);
        vector<int>ind(n,0);
        int s=a.size();
        for(int i=0;i<s;i++)
        {
            if(a[i][1]==a[i][0])return false;
            adj[a[i][1]].push_back(a[i][0]);
            ind[a[i][0]]++;
        }
        queue<int>q;
        
        for(int i=0;i<n;i++)
        {
            if(ind[i]==0)
            {
                q.push(i);
                vis[i]=1;
            }
                
        }
        if(q.size()==0)return false;
        while(q.size()!=0)
        {
            int f=q.front();
            // cout<<f<<" "<<endl;
            q.pop();
            for(auto i:adj[f])
            {
                // cout<<i<<" ";
                ind[i]--;
                if(ind[i]==0 && vis[i]==0)
                {
                    q.push(i);
                    vis[i]=1;
                }
            }
        }
        
        for(auto i:vis)
        {
            if(i==0)
            {
                return false;
            }
                
        }
        cout<<"h00l"<<endl;
        return true;
        
    }
};