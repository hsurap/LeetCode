class MyCircularQueue {
public:
    int*arr;
    int st,en,capacity,size;
    MyCircularQueue(int k) 
    {
        arr=new int[k];
        st=-1;en=-1;
        capacity=k;
        size=0;  
    }
    
    bool enQueue(int value) {
        if(size==capacity)
            return false;
        en=(en+1)%capacity;
        arr[en]=value;
        if(size==0)st=0;
        size++;
        return true;
    }
    
    bool deQueue() 
    {
        if(size==0)return false;
        if(size==1)
        {
            size=0;
            st=-1;
            en=-1;
            return true;
        }
        size--;
        st=(st+1)%capacity;
        return true;
    }
    
    int Front() {
        if(size==0)return -1;
        return arr[st];
    }
    
    int Rear() {
        if(size==0)return -1;
        return arr[en];
    }
    
    bool isEmpty() {
        return size==0;
        
    }
    
    bool isFull() {
        return size==capacity;
    }
};

/**
 * Your MyCircularQueue object will be instantiated and called as such:
 * MyCircularQueue* obj = new MyCircularQueue(k);
 * bool param_1 = obj->enQueue(value);
 * bool param_2 = obj->deQueue();
 * int param_3 = obj->Front();
 * int param_4 = obj->Rear();
 * bool param_5 = obj->isEmpty();
 * bool param_6 = obj->isFull();
 */