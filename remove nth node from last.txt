/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if((head==NULL) || ((head->next ==NULL)&& n==1))
           return NULL;
        struct ListNode *slow=head;
        struct ListNode *fast=head;
        int count=0;
        while(count<n)
        {
            fast=fast->next;
            count++;
        }
        if(fast==NULL)
            return head->next;
        struct ListNode *b=NULL;
        while(fast!=NULL)
        {
            b=slow;
            slow=slow->next;
            fast=fast->next;
        }
        struct ListNode *a=NULL;
        a=b;
        b->next=slow->next;
        //free (a);
         return head;
    }
};