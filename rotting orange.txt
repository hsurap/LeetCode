class Solution {
public:
    int orangesRotting(vector<vector<int>>& a) 
    {
        int n=a.size();
        int m=a[0].size();
        vector<vector<int>>v(n,vector<int>(m,0));
        queue<pair<int,int>>q;
        int time=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(a[i][j]==2)
                {
                    q.push({i,j});
                    v[i][j]=1;
                }
                    
            }
        }
        int dr[4]={-1,0,+1,0};
        int dc[4]={0,+1,0,-1};
        while(q.size()!=0)
        {
            int size=q.size();
            time++;
            // cout<<size<<"-->";
            for(int i=0;i<size;i++)
            {
                int r=q.front().first;
                int c=q.front().second;
                q.pop();
                for(int k=0;k<4;k++)
                {
                    int nr=r+dr[k];
                    int nc=c+dc[k];
                    if(nr>=0 && nr<n && nc>=0 && nc<m && v[nr][nc]==0 && a[nr][nc]==1)
                    {
                        q.push({nr,nc});
                        v[nr][nc]=1;
                    }
                }
                
            }
        }
        // cout<<time-1<<" ";
//         for(int i=0;i<n;i++)
//         {
//             for(int j=0;j<m;j++)
//             {
//                 cout<<v[i][j]<<" ";
                    
//             }
//             cout<<endl;
//         }
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(a[i][j]==1 && v[i][j]==0)
                {
                    return -1;
                }
                    
            }
        }
        if(time==0)return 0;
        return  time-1;
    }
};