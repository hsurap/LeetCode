class Solution {
public:
    int singleNonDuplicate(vector<int>& A) {
        int N=A.size();
        int st=0;
	    int en=N-1;
        if(N==1)return A[0];
	    if(N>=2)
	    {
	        if(A[0]!=A[1])return A[0];
	        if(A[N-1]!=A[N-2])return A[N-1];
	    }
	    while(st<=en)
	    {
	        int md=(st+en)/2;
	       // cout<<st<<" "<<en<<" "<<md<<" "<<A[md]<<endl;
	        if((A[md]!=A[md-1] ) && (A[md]!=A[md+1]))
	            return A[md];
	        if((A[md]==A[md+1]) && ((N-1-md)%2==1))
	            en=md-1;
	        else if((A[md]==A[md+1]) && ((N-1-md)%2==0))
	            st=md+1;
	        else if((A[md]==A[md-1] )&& ((md-0)%2==1))
	            st=md+1;
	        else en=md-1;
	    }
        return -1;
    }
};